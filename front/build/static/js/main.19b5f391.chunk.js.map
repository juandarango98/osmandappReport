{"version":3,"sources":["images/d1.png","images/d2.png","images/d3.png","images/d4.png","images/d5.png","images/d6.png","images/d7.png","images/d8.png","images/d9.png","images/d10.png","images/ec1.png","images/ec2.png","images/ec3.png","images/ec4.png","images/ec5.png","images/ec6.png","images/ec7.png","images/inicioapp.png","images/addpodcast.png","images/u3.png","images/u4.png","images/u5.png","images/u6.png","logo.svg","Components/Home.js","Components/Design.js","Nav.js","Components/ConnectualEventivity.js","Components/SubModule.js","Components/Usability.jsx","appHelpers.js","Components/Comments.jsx","Components/FixedHeaderComponent.jsx","Components/Labels.jsx","Components/Milestones.jsx","Components/PaginationComponent.jsx","Components/StackedIcons.jsx","Components/TimeAgoComponent.jsx","Components/GithubIssues.jsx","Components/Issues.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","id","style","backgroundImage","href","Design","class","name","src","d1","alt","height","d2","d3","d4","d5","display","justifyContent","d6","d7","d8","d9","d10","Nav","position","top","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ConnectualEventivity","props","ec1","ec2","ec3","ec4","ec5","ec6","ec7","SubModule","left","verticalAlign","fontSize","fontStyle","margin","title","p","img","zoom","Usability","marginBottom","inicioapp","addpodcast","u3","u4","u5","u6","converter","require","Converter","tables","strikethrough","ghCompatibleHeaderId","literalMidWordUnderscores","ghCodeBlocks","tasklists","ghMentions","ghMentionsLink","Comments","data","comments","icon","faComment","transform","background","color","titleCase","inStr","replace","tStr","charAt","toUpperCase","substr","toLowerCase","doModal","show","previousState","modal","NavbarButtonGroup","buttonArray","filterType","clickFunction","listFilter","onClick","map","stateChoice","i","key","data-choice","data-list-filter","FixedHeaderComponent","state","avatar","handleFilter","bind","handleRepo","getAvatar","showModal","renderModal","this","previousProps","user","nnew","repo","baseUrl","avatarUrlBase","fetch","headers","Authorization","Accept","then","response","ok","json","Error","setState","owner","avatar_url","e","preventDefault","value","target","dataset","choice","obj","onFilterChange","onRepoChange","console","log","placeholder","ref","c","date","Date","since","dateString","getTime","getTimezoneOffset","toISOString","split","titleString","role","width","aria-hidden","React","Component","padZero","str","len","Array","join","slice","invertColor","hex","bw","indexOf","length","r","parseInt","g","b","toString","Labels","labels","labelMap","label","index","backgroundColor","Fragment","Milestones","milestone","_addclass","faMapSigns","SwipeComponent","onSwipedLeft","onSwipingLeft","onSwipedRight","onSwipingRight","children","PaginationComponent","sendPageNumber","swipingLeft","swipingRight","onPageChange","currentTarget","url","absX","lastpage","pages","last","pop","prev","currentPageNumber","pageButtons","apply","Number","call","x","data-url","page","IssueIconStack","faCircle","faExclamationCircle","faCheck","PrIconStack","faCodeBranch","StackedIcons","iconColor","getTimeAgoString","timestamp","DAY","HOUR","elapsed","now","getElapsedString","unit","round","Math","SECOND","MINUTE","TimeAgoComponent","createdAt","created_at","updatedAt","updated_at","login","whichTime","number","timeAgoString","assigneesString","assignees","GithubIssues","per_page","sort","issues","loading","error","showBody","getIssues","handleRepoChange","handlePageChange","handleFilterChange","$navbarBurgers","prototype","document","querySelectorAll","forEach","el","addEventListener","$target","getElementById","classList","toggle","nextState","params","keys","Object","encodeURIComponent","appHelpers","linkHeaders","userRepoIssues","fullUrl","get","header","reduce","links","part","section","trim","catch","max","message","incrementPage","toFilter","filterObj","newObj","stateTest","changeRepo","renderError","handleClick","querySelector","innerHTML","makeHtml","body","hideMe","issueOrPr","choiceType","pull_request","data-id","faEye","overflow","renderLoading","renderIssues","flexGrow","Issues","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19b5f391.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/d1.1a2bf745.png\";","module.exports = __webpack_public_path__ + \"static/media/d2.0d188ce2.png\";","module.exports = __webpack_public_path__ + \"static/media/d3.a783b984.png\";","module.exports = __webpack_public_path__ + \"static/media/d4.e274456c.png\";","module.exports = __webpack_public_path__ + \"static/media/d5.9abd218c.png\";","module.exports = __webpack_public_path__ + \"static/media/d6.cdd1ce6d.png\";","module.exports = __webpack_public_path__ + \"static/media/d7.3344636c.png\";","module.exports = __webpack_public_path__ + \"static/media/d8.d5719453.png\";","module.exports = __webpack_public_path__ + \"static/media/d9.f8552bc3.png\";","module.exports = __webpack_public_path__ + \"static/media/d10.deb93e92.png\";","module.exports = __webpack_public_path__ + \"static/media/ec1.04f98938.png\";","module.exports = __webpack_public_path__ + \"static/media/ec2.ed103c36.png\";","module.exports = __webpack_public_path__ + \"static/media/ec3.612a5f63.png\";","module.exports = __webpack_public_path__ + \"static/media/ec4.23da3ac0.png\";","module.exports = __webpack_public_path__ + \"static/media/ec5.8e97b8b4.png\";","module.exports = __webpack_public_path__ + \"static/media/ec6.4398913f.png\";","module.exports = __webpack_public_path__ + \"static/media/ec7.1439c3c4.png\";","module.exports = __webpack_public_path__ + \"static/media/inicioapp.8aa26743.png\";","module.exports = __webpack_public_path__ + \"static/media/addpodcast.c1ab56a6.png\";","module.exports = __webpack_public_path__ + \"static/media/u3.440e557a.png\";","module.exports = __webpack_public_path__ + \"static/media/u4.ac7e46ce.png\";","module.exports = __webpack_public_path__ + \"static/media/u5.df149c1f.png\";","module.exports = __webpack_public_path__ + \"static/media/u6.627077a7.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nimport \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"Home\">\n      <div className=\"intro intro-carousel\">\n        <div id=\"carousel\" className=\"owl-carousel owl-theme\">\n          <div\n            className=\"carousel-item-a intro-item bg-image\"\n            style={{\n              backgroundImage: `url(https://osmand.net/images/header_image.jpg)`,\n            }}\n          >\n            <div className=\"overlay overlay-a\"></div>\n            <div className=\"intro-content display-table\">\n              <div className=\"table-cell\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-8\">\n                      <div className=\"intro-body\">\n                        <p className=\"intro-title-top\">\n                          Juan Diego Arango & Gregorio Ospina\n                        </p>\n                        <h1 className=\"intro-title mb-4\">\n                          <span className=\"color-b\">ANtennaPod</span> App\n                        </h1>\n                        <p className=\"intro-subtitle intro-price\">\n                          <a href=\"#descripcion\">\n                            <span className=\"price-a\">What is Osmand?</span>\n                          </a>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <section className=\"section-services section-t8\" id=\"descripcion\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"title-wrap d-flex justify-content-between\">\n                <div className=\"title-box\">\n                  <h2 className=\"title-a\">Description</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card-box-c foo\">\n                <div className=\"card-body-c\">\n                  <p className=\"content-d\">\n                    AntennaPod is a podcast manager and player that gives you\n                    instant access to millions of free and paid podcasts, from\n                    independent podcasters to large publishing houses such as\n                    the BBC, NPR and CNN. Add, import and export their feeds\n                    hassle-free using the iTunes podcast database, OPML files or\n                    simple RSS URLs. Download, stream or queue episodes and\n                    enjoy them the way you like with adjustable playback speeds,\n                    chapter support and a sleep timer. Save effort, battery\n                    power and mobile data usage with powerful automation\n                    controls for downloading episodes (specify times, intervals\n                    and WiFi networks) and deleting episodes (based on your\n                    favourites and delay settings). Made by podcast-enthusiasts,\n                    AntennaPod is free in all senses of the word: open source,\n                    no costs, no ads.\n                  </p>\n                </div>\n                <div className=\"card-footer-c\">\n                  <a href=\"/signup\" className=\"link-c link-icon\">\n                    Learn more\n                    <span className=\"ion-ios-arrow-forward\"></span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"section-services section-t8\" id=\"descripcion\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"title-wrap d-flex justify-content-between\">\n                <div className=\"title-box\">\n                  <h2 className=\"title-a\">Features</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div>\n                <div>\n                  <ul className=\"content-d\">\n                    <h3>Import, organize and play</h3>\n                    <p>\n                      Manage playback from anywhere: homescreen widget, system\n                      notification and earplug and bluetooth controls\n                    </p>\n                    <p>\n                      Add and import feeds via the iTunes and gPodder.net\n                      directories, OPML files and RSS or Atom links\n                    </p>\n                    <p>\n                      Enjoy listening your way with adjustable playback speed,\n                      chapter support, remembered playback position and an\n                      advanced sleep timer (shake to reset, lower volume)\n                    </p>\n                    <p>Access password-protected feeds and episodes</p>\n                    <h3>Keep track, share & appreciate</h3>\n                    <p>\n                      Keep track of the best of the best by marking episodes as\n                      favourites\n                    </p>\n                    <p>\n                      Find that one episode through the playback history or by\n                      searching titles and shownotes\n                    </p>\n                    <p>\n                      Share episodes and feeds through advanced social media and\n                      email options, the gPodder.net services and via OPML\n                      export\n                    </p>\n                    <h3>Control the system</h3>\n                    <p>\n                      Take control over automated downloading: choose feeds,\n                      exclude mobile networks, select specific WiFi networks,\n                      require the phone to be charging and set times or\n                      intervals\n                    </p>\n                    <p>\n                      Manage storage by setting the amount of cached episodes,\n                      smart deletion and selecting your preferred location\n                    </p>\n                    <p>\n                      Adapt to your environment using the light and dark theme\n                    </p>\n                    <p>\n                      Back-up your subscriptions with the gPodder.net\n                      integration and OPML export\n                    </p>\n                  </ul>\n                </div>\n                <div className=\"card-footer-c\">\n                  <a href=\"/signup\" className=\"link-c link-icon\">\n                    Learn more\n                    <span className=\"ion-ios-arrow-forward\"></span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <footer>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"copyright-footer\">\n              <p className=\"copyright color-text-a\">\n                &copy;\n                <span className=\"color-a\">\n                  {\" \"}\n                  Gregorio Ospina - Juan Diego Arango\n                </span>{\" \"}\n                .\n              </p>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport d1 from \"../images/d1.png\";\nimport d2 from \"../images/d2.png\";\nimport d3 from \"../images/d3.png\";\nimport d4 from \"../images/d4.png\";\nimport d5 from \"../images/d5.png\";\nimport d6 from \"../images/d6.png\";\nimport d7 from \"../images/d7.png\";\nimport d8 from \"../images/d8.png\";\nimport d9 from \"../images/d9.png\";\nimport d10 from \"../images/d10.png\";\n\nconst Design = () => {\n  return (\n    <div id=\"write\" class=\"is-node\">\n      <h2>\n        <a name=\"design\" class=\"md-header-anchor\"></a>\n        <span>Design</span>\n      </h2>\n      <h3>\n        <a\n          name=\"how-is-antennapod-structured-and-what-have-been-the-design-decisions\"\n          class=\"md-header-anchor\"\n        ></a>\n        <span>\n          How is Antennapod structured and what have been the design decisions?\n        </span>\n      </h3>\n      <p>\n        <span>\n          To better understand the design decisions behind Antennapod, we have\n          chosen the five most important pages and de-structured them,\n          understanding the design from a UI perspective as well as from the\n          point of view of the code.\n        </span>\n      </p>\n      <h3>\n        <a name=\"episode-view\" class=\"md-header-anchor\"></a>\n        <span>Episode View</span>\n      </h3>\n      <p>\n        <img\n          src={d1}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          Once you have subscribed to one or more podcasts, the app launches\n          automatically to the Episodes View. Here we can see a design component\n          that we found repeated numerous times throughout the application. The\n          superior Toolbar, with the &#39;New&#39;, &#39;All&#39;, and\n          &#39;Favourites&#39;. It is very simple, but it has no defining\n          features, and as it is repeated a number of times, we found it to be\n          hard to automatically know in what part of the app we were in.\n        </span>\n      </p>\n      <p>\n        <img\n          src={d2}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"200px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          The bottom part of the view is a RecycleView called on the onCreate of\n          the MainActivity as a recycledViewPool that holds a maximum of 25\n          elements. The card holds the name of the episode, the date it was\n          puiblished and the runtime of the episode. On the right it has a\n          button to download the episode. However if you tap a cared, it\n          forwards yo to this screen\n        </span>\n      </p>\n      <p>\n        <img\n          src={d3}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          Where it once more prompts you to download or stream the episode. We\n          believe that the application should send you automatically to the\n          streaming screen and that inside the streaming window, you should have\n          the option to download. The card should, instead of the option to\n          download, the button to see the description of the episode.\n        </span>\n      </p>\n      <p>\n        <img\n          src={d4}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"100px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          That would avoid unnecesary taps that slows down the flow of the\n          application. Besides, from a business and contextual point of view,\n          there shouldn&#39;t be so much focus in the description page of the\n          episode, since that isn&#39;t the focus of the channels, we found out\n          that many podcast shows have empty descriptions,\n        </span>\n      </p>\n      <p>\n        <img\n          src={d5}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          Leaving the app looking empty. If instead of this, it could focus more\n          on the actual episode, it could become a much more rich and intuitive\n          experience. We drew comparissons with Spotify and found that spotify\n          has a very clean and intuitive way of displaying additional\n          information about the song or podcast episode that is playing:\n        </span>\n      </p>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <img\n          src={d6}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n        <img\n          src={d7}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n        <img\n          src={d8}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n      </div>\n\n      <p>\n        <span>\n          They put the descriptive content of the song, in a draggable display\n          below. This is very useful as it becomes a centralized interface for\n          all of the song&#39;s information.\n        </span>\n      </p>\n      <h3>\n        <a name=\"subscription-view\" class=\"md-header-anchor\"></a>\n        <span>Subscription View</span>\n      </h3>\n      <p>\n        <span>\n          When you enter your subscriptions you enter to this view of all the\n          podcasts that you have subscribed to. We feel that unless you are\n          subscribed to more than 9 shows, this view will look very empty and be\n          very uninviting, we would suggest to dynamically change the size of\n          the columns depending on the amount of subscribed shows.\n        </span>\n      </p>\n      <p>\n        <img\n          src={d9}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>&nbsp;</p>\n      <p>\n        <span>\n          Furthermore, we found that when you are in the opposite scenario, (you\n          have a lot of subscriptions), there is no way of filtering or\n          searching through your subscriptions, making the interface incredibly\n          cluttered all the time. SImilarly, many users may not know by memory\n          the thumbnail of one of the shows that they are subscribed to but want\n          to listen. They should use a card based recycledView, where it shows\n          more clearly the name of the episode and the number of the episode, in\n          order to avoid putting the small tag in the top right of every\n          thumbnail.\n        </span>\n      </p>\n      <h3>\n        <a name=\"add-podcast-view\" class=\"md-header-anchor\"></a>\n        <span>Add Podcast View</span>\n      </h3>\n      <p>\n        <span>\n          The first page that you see if you open the app for the first time, or\n          if you have no subscriptions is the Add Podcast View\n        </span>\n      </p>\n      <p>\n        <img\n          src={d10}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          This is by far the best looking page of the app. We found it uses\n          appropiately the space. The card layout really suits this type of\n          interface, where every card is a very different functionality.\n          However, we felt a little lost in this page, we feel that there should\n          be more tooltips that give me a little bit more information on some\n          features, like OPML Import. As a non-technical user, I would be\n          intimidated by OPML and URL. It feels like it is targeted at people\n          really familiar with podcasts and that know that you can search a\n          podcast from an URL and bring it tio the app. Testing this app i was\n          legitimately confused on what URL i would need to put there in order\n          to bring a podcast. Nonetheless, we do feel like it is the best\n          interface of the app.\n        </span>\n      </p>\n      <p>&nbsp;</p>\n      <p>&nbsp;</p>\n    </div>\n  );\n};\n\nexport default Design;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\n      style={{ position: \"fixed\", top: \"0em\" }}\n    >\n      <Link to=\"/home\" className=\"navbar-brand\">\n        AntennaPod Report\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\">\n        <ul className=\"navbar-nav\">\n          <Link to=\"/home\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Home</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/issues\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Issues</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/ec\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Eventual connectivity</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/home\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Performance</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/design\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Design</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/usability\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Usability</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./EC.css\";\n\nimport ec1 from \"../images/ec1.png\";\nimport ec2 from \"../images/ec2.png\";\nimport ec3 from \"../images/ec3.png\";\nimport ec4 from \"../images/ec4.png\";\nimport ec5 from \"../images/ec5.png\";\nimport ec6 from \"../images/ec6.png\";\nimport ec7 from \"../images/ec7.png\";\n\nconst ConnectualEventivity = (props) => {\n  return (\n    <div id=\"write\" class=\"is-node\">\n      <div>\n        <h2>Eventual Connectivity</h2>\n        <h3>\n          How does Antennapod handle intermittent, or poor qualiaty netwrok\n          scenarios?\n        </h3>\n        <p>\n          Eventual connectivity is a very critical issue, that when implemented\n          wrongly, will lead to unusability, poor performance, and will decrease\n          the overall user experience of the application. We found several\n          antipatterns through out Antennapod, and we have decided to contrast\n          these antipaterns, to some good design patterns that we found in\n          different other applications in order to properly convey the\n          differences in user experience that a good Eventual Connectivity\n          management provides is huge.\n        </p>\n      </div>\n      <h3>Non-informative message</h3>\n      <p>\n        We found numerous instances of Non-informattive message anti pattern\n        within Antennapod. This is when the user has lost connectiity, and the\n        application sends unfriendly and cryptic messeages, snackbars and popups\n        to the non-technical user. We drew some similes with the analogous apps,\n        like Google Podcasat and Spotify, to understand where Antennapod coudl\n        improve and be able to pin down their erred behavior more easily.\n      </p>\n      <p>\n        <span>\n          We disabled internet and booted the application for the first time and\n          we were welcomed by the following screen.\n        </span>\n      </p>\n      <p>\n        <img\n          src={ec1}\n          alt=\"image-20200519084807692\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          For a non-technical user who happened to open this application on the\n          precise moment that he disconnected, seeing the message &quot;Unable\n          to resolve host&quot; is extremely intimidating and will lead to\n          thinking that the entire application is broken, and will reduce the\n          perceived quality of the app. If we contrast this with Google Podcast,\n          when we open for the first time the application with no internet, the\n          following screen welcomes the user\n        </span>\n      </p>\n      <p>\n        <img\n          src={ec2}\n          alt=\"image-20200519085339405\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          This is a great example of a good design pattern for managing Eventual\n          Connectivty, as it doesnt swarm the user with useless information\n          which he doesnt have the access to yet, (due to not having internet).\n          It is clear,\n        </span>\n      </p>\n      <p>\n        <img\n          src={ec3}\n          alt=\"image-20200519085707340\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          showing firstly the name of the application very clearly, reminding\n          the user in what application he is at, this doesnt happen in the\n          Antennapod app. There is no way for a user to know what application\n          hes at unless he goes back to the home menu, or opens the opened apps\n          drawer. So when an error like &quot;Unresolved host&quot;, it makes\n          the whole interface much less amiccable. Secondly (2 in the image) The\n          message is crystal clear, announcing that there was an error, that\n          this is not expected behavior. Bu instead of giving the technical\n          reasons why it failed, it gives contextual information on the error,\n          as it states that &quot;Your subscriptions aren&#39;t loading right\n          now&quot;. This gives the user information with which he can start to\n          understand what could&#39;ve gone wrong. Lastly (3 in the image) A\n          snackbar pops up giving the concise reason for the failure, &quot;No\n          connection&quot;. in two words it conveyed much more information than\n          Antennapod did with their 13 word-long &quot;Unable to resolve host\n          &#39;itunes.apple.com&#39; no address associated with hostname&quot;\n          error.\n        </span>\n      </p>\n      <p>\n        <span>We found numerous instances of this thorugh out the app</span>\n      </p>\n      <p>\n        <img\n          src={ec4}\n          alt=\"image-20200519091621778\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>&nbsp;</p>\n      <p>\n        <span>\n          We believe that that screen is very aesthetic and very clean-looking,\n          however it is ruined by that daunting message. Furthermore as that is\n          the search screen, and the message is alluding at something not being\n          ofund, I could see the possibility of the user thinking that it has\n          something to do with the things he is searching for, and gets\n          deiscouraged from using the application all together. If we compare\n          that search screen with the one from spotify,\n        </span>\n      </p>\n      <p>\n        <img\n          src={ec5}\n          alt=\"image-20200519092454637\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          We can clearly see the differences, spotify pops out a message that\n          clearly states that something went wrong, just as with the Google\n          podcast example. It first and foremost announces to the user that this\n          is not an expected behavior, followed by the small black bar which\n          accompanies the user through the app, clearly telling him the cause\n          for all the atypical behavior within the app &quot;No internet\n          connection&quot;.\n        </span>\n      </p>\n      <p>\n        <span>\n          Lastly, we found that when you are listening to a podcast via the\n          stream feature, if you lose connectivity and skip to a position\n          further on in the episode, this message will appear. Another example\n          of a non-informative message.\n        </span>\n      </p>\n      <p>\n        <img\n          src={ec6}\n          alt=\"image-20200519095054656\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <h3>Non-existent result notification</h3>\n      <p>\n        <span>\n          Another atypical behavior associated with EC but that is difficult to\n          capure in a screen grab is that when we were downloading an episode\n          from a podcast, if we were to lose connectivity in the middle of the\n          download, no error message would hsow, no announcement of anything,\n          but the download would just dissappear from the downloads section.\n          This is a clear example of{\" \"}\n        </span>\n        <strong>\n          <span>\n            non-existent notification of problem when performing action\n          </span>\n        </strong>\n        <span>\n          and it is really troublesome for the user, because the user might lose\n          connection for a split second and will never know that his internet\n          connection bleeped neither why his downloads dissappeared. We ran the\n          same test in Spotify, where we began downloading a podcast episode and\n          turned off the connection.\n        </span>\n      </p>\n      <p>\n        <img\n          src={ec7}\n          alt=\"image-20200519100829576\"\n          style={{ height: \"500px\" }}\n        />\n      </p>\n      <p>\n        <span>\n          The episode card didnt dissappear, it began showing a spinner where\n          the download progress spinner was before, and showed the black bar\n          clearly expressing that the weird behavior of the spinner was linked\n          to the error being displayed by the bar.\n        </span>\n      </p>\n      <p>&nbsp;</p>\n      <p>\n        <span>\n          From these examples, we found that the key features of what makes a\n          good design pattern of EC are:\n        </span>\n      </p>\n      <ul>\n        <li>\n          <strong>\n            <span>\n              State as clearly and as quickly as possible that this is not\n              typical behavior of your application:\n            </span>\n          </strong>\n          <span> </span>\n          <span>\n            By telling the user that there is something wrong, the user will no\n            longer associate that wrong behavior to the normal workflow of the\n            app, if he does associate it. The entire experience of the app will\n            be compromised.\n          </span>\n        </li>\n        <li>\n          <strong>\n            <span>\n              It is OK to be persistent when dealing with Eventual Connectivity\n            </span>\n          </strong>\n          <span>\n            when dealing with an error that permeates the whole application in\n            the way that not having connectivity does, it is better to be\n            persistent and tell the user in every screen that the application is\n            behaving in unusual ways due to the connectivity error, much like\n            Spotify does, where the small black bar follows you through all the\n            screens, implicitly telling the user, &quot;All the weird things\n            happening right now that you probably dont like, are because of\n            me&quot;. In this way, the user will attribute all the frustrating\n            behavior to the error, not the app.\n          </span>\n        </li>\n      </ul>\n      <p>&nbsp;</p>\n    </div>\n  );\n};\n\nexport default ConnectualEventivity;\n","import React from \"react\";\nconst SubModule = (props) => {\n  if (props.left) {\n    return (\n      <div style={{ verticalAlign: \"middle !Important\" }}>\n        <h3\n          style={{\n            fontSize: \"26pt\",\n            fontStyle: \"Bold\",\n            margin: \"10px\",\n          }}\n        >\n          {props.title}\n        </h3>\n        <br></br>\n        <div className=\"row\">\n          <div className=\"col md-6 col sm-10\">\n            <p\n              style={{\n                verticalAlign: \"middle !Important\",\n                fontSize: \"18pt\",\n                display: \"inline-block !Important \",\n              }}\n            >\n              {props.p}\n            </p>\n          </div>\n          <div className=\"col md-4\">\n            <img src={props.img} style={{ zoom: \"30%\" }}></img>\n          </div>\n        </div>\n        <br></br>\n\n        <br></br>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h3\n          style={{\n            fontSize: \"26pt\",\n            fontStyle: \"Bold\",\n            margin: \"10px\",\n          }}\n        >\n          {props.title}\n        </h3>\n        <br></br>\n        <div className=\"row\">\n          <div className=\"col md-4\">\n            <img src={props.img} style={{ zoom: \"30%\" }}></img>\n          </div>\n          <div className=\"col md-6 col sm-10\">\n            <p\n              style={{\n                verticalAlign: \"middle !Important\",\n                fontSize: \"18pt\",\n                display: \"inline-block !Important \",\n              }}\n            >\n              {props.p}\n            </p>\n          </div>\n        </div>\n\n        <br></br>\n        <br></br>\n      </div>\n    );\n  }\n};\n\nexport default SubModule;\n","import React from \"react\";\nimport \"./EC.css\";\nimport SubModule from \"./SubModule\";\nimport inicioapp from \"../images/inicioapp.png\";\nimport addpodcast from \"../images/addpodcast.png\";\nimport u3 from \"../images/u3.png\";\nimport u4 from \"../images/u4.png\";\nimport u5 from \"../images/u5.png\";\nimport u6 from \"../images/u6.png\";\n\nconst Usability = (props) => {\n  return (\n    <div id=\"write\" className=\"is-node\">\n      <div>\n        <h1 style={{ fontSize: \"34pt\", marginBottom: \"50px\" }}>Usability</h1>\n        <SubModule\n          left={true}\n          title=\"Using the app for the first time\"\n          p=\"The page in where the app is first opened is not really atractive,\n              besides that, I don't know what to do. There is a side bar with\n              various options in which the 'add podcast' seems to be selected\n              therefore I think that is the first place the developers want me\n              to go.\"\n          img={inicioapp}\n        ></SubModule>\n        <SubModule\n          title=\"Add a podcast\"\n          p=\"I'm following what I believe is the inteneded flow of the app and get to\n          this window. Here I see a library of different podcasts I can choose.\n          This window's purpose is clear, I found some interesting features that\n          allow me to search for an specific podcast and there is also a section\n          to discover podcasts which is pretty nice.\"\n          img={addpodcast}\n          left={false}\n        ></SubModule>\n        <SubModule\n          title=\"Adding a podcast\"\n          p=\"There are a bunch of advanced options, but I only know how to use the itunes one\"\n          img={u3}\n          left={true}\n        ></SubModule>\n        <SubModule\n          title=\"Checking out a podcast\"\n          p=\" I clicked on a podcast, a window appears andf I can see its the\n          subscribe button, the description and the list of episodes, its pretty\n          straightforward how to use this window\"\n          img={u4}\n          left={false}\n        ></SubModule>\n        <SubModule\n          title=\"Subscribing to a podcast\"\n          p=\" Once I clicked on the subscribe button, this new window appears. Here,\n          apparently here I can choose which of the episodes to download. The\n          list of episodesis not very confortable, I can scroll down infinitely\n          throughout all the episodes that the podcast has. I just realized that\n          there is kind of a tool bar on the top, it dissapears when I scroll\n          down through the list of episodes. \"\n          img={u5}\n          left={true}\n        ></SubModule>\n        <SubModule\n          title=\"Checking out the search bar\"\n          p=\"I tryied to use the search bar and it works, but the text color has almosta no contrast with the background and I find it really hard to read\"\n          img={u6}\n          left={false}\n        ></SubModule>\n      </div>\n      <h3>Non-informative message</h3>\n    </div>\n  );\n};\n\nexport default Usability;\n","// create a Showdown instance to parse issue/pr body content\nconst showdown = require('showdown')\n\n// Showdown parameters to jive well with Github flavored markdown\nexport const converter = new showdown.Converter({\n    tables: true,\n    strikethrough: true,\n    ghCompatibleHeaderId: true,\n    literalMidWordUnderscores: true,\n    ghCodeBlocks: true,\n    tasklists: true,\n    ghMentions: true,\n    ghMentionsLink: 'https://github.com/{u}'\n})\n\n// helper function to properly encode query string for fetch\nexport const encodeQueryString = (params) => {\n    const keys = Object.keys(params)\n    return keys.length ?\n        \"?\" + keys\n        .map(key => encodeURIComponent(key) +\n            \"=\" + encodeURIComponent(params[key]))\n        .join(\"&\") :\n        \"\"\n}\n\n// helper function to parse Link headers in to an object for use with pagniation\nexport const parseLinkHeader = (header) => {\n    if (header.length === 0) {\n        throw new Error(\"input must not be of zero length\");\n    }\n\n    // Split parts by comma and parse each part into a named link\n    return header.split(/(?!\\B\"[^\"]*),(?![^\"]*\"\\B)/).reduce((links, part) => {\n        const section = part.split(/(?!\\B\"[^\"]*);(?![^\"]*\"\\B)/);\n        if (section.length < 2) {\n            throw new Error(\"section could not be split on ';'\");\n        }\n        const url = section[0].replace(/<(.*)>/, '$1').trim();\n        const name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n\n        links[name] = url;\n\n        return links;\n    }, {});\n}","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Comments = ({ data }) => {\n  let jsx = (\n    <span\n      className={data.comments < 1 ? \"is-hidden\" : \"fa-layers  fa-lg comments\"}\n    >\n      <FontAwesomeIcon icon={faComment} transform=\"down-2 left-2\">\n        1\n      </FontAwesomeIcon>\n      <span\n        className=\"fa-layers-counter fa-2x\"\n        transform=\"up-5\"\n        style={{ background: \"LightGrey\", color: \"black\" }}\n      >\n        {data.comments < 0 ? \"\" : data.comments}\n      </span>\n    </span>\n  );\n\n  return jsx;\n};\nexport default Comments;\n","import React from \"react\";\n\nconst titleCase = (inStr) => {\n  return inStr.replace(/\\w\\S*/g, function (tStr) {\n    return tStr.charAt(0).toUpperCase() + tStr.substr(1).toLowerCase();\n  });\n};\nfunction doModal(show) {\n  return (previousState) => {\n    return { ...previousState, modal: show };\n  };\n}\nconst NavbarButtonGroup = ({\n  buttonArray,\n  filterType,\n  clickFunction,\n  listFilter,\n}) => {\n  return (\n    <div className=\"buttons has-addons\" onClick={clickFunction}>\n      {buttonArray.map((stateChoice, i) => {\n        return (\n          <span\n            key={i}\n            data-choice={stateChoice}\n            data-list-filter={filterType}\n            className={\n              \"button \" +\n              (listFilter[filterType] === stateChoice\n                ? \"is-selected is-active is-info\"\n                : \"\")\n            }\n          >\n            {titleCase(stateChoice)}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nclass FixedHeaderComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avatar: \"https://github.githubassets.com/images/icons/emoji/octocat.png\",\n      modal: \"\",\n    };\n    this.handleFilter = this.handleFilter.bind(this);\n    this.handleRepo = this.handleRepo.bind(this);\n    this.getAvatar = this.getAvatar.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.renderModal = this.renderModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAvatar();\n  }\n\n  shouldComponentUpdate(previousProps, previousState) {\n    if (previousProps.listFilter !== this.props.listFilter) {\n      return true;\n    }\n    if (previousProps.user !== this.props.user) {\n      return true;\n    }\n    if (previousState.avatar !== this.state.avatar) {\n      return true;\n    }\n    if (previousState.modal !== this.state.modal) {\n      return true;\n    }\n    return false;\n  }\n\n  getAvatar(nnew, user, repo) {\n    const headers = {\n      headers: {\n        Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n        Accept:\n          \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n      },\n    };\n    const baseUrl = \"https://api.github.com/repos\";\n    const avatarUrlBase = nnew\n      ? `${baseUrl}/${user}/${repo}`\n      : `${baseUrl}/${this.props.user}/${this.props.repo}`;\n\n    fetch(avatarUrlBase, headers)\n      .then((response) => {\n        if (response.ok) return response.json();\n        throw new Error(\"Request failed.\");\n      })\n      .then((data) => {\n        this.setState({ avatar: data.owner.avatar_url, modal: \"\" });\n      });\n  }\n\n  handleFilter(e) {\n    e.preventDefault();\n    const value = e.target.dataset.choice;\n    const type = e.target.dataset.listFilter;\n    let obj = {};\n    obj[type] = value;\n    this.props.onFilterChange(obj);\n  }\n  handleRepo(e) {\n    e.preventDefault();\n    this.getAvatar(true, this.user.value, this.repo.value);\n    this.props.onRepoChange(this.user.value, this.repo.value);\n  }\n  showModal(e) {\n    e.preventDefault();\n    console.log(e);\n    if (this.state.modal !== true) {\n      this.setState(doModal(true));\n    } else {\n      this.setState(doModal(false));\n    }\n  }\n  renderModal() {\n    return (\n      <div\n        className={\"modal \" + (this.state.modal === true ? \"is-active\" : \"\")}\n      >\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-content\">\n          <form>\n            <div className=\"field\">\n              <label className=\"label is-large has-text-white\">\n                Github User\n              </label>\n              <div className=\"control\">\n                <input\n                  className=\"input is-large\"\n                  type=\"text\"\n                  placeholder=\"facebook\"\n                  ref={(c) => (this.user = c)}\n                  name=\"user\"\n                />\n              </div>\n            </div>\n            <div className=\"field\">\n              <label className=\"label is-large has-text-white\">\n                Repository Name\n              </label>\n              <div className=\"control\">\n                <input\n                  className=\"input is-large\"\n                  type=\"text\"\n                  placeholder=\"react\"\n                  ref={(c) => (this.repo = c)}\n                  name=\"repo\"\n                />\n              </div>\n            </div>\n            <button\n              className=\"button is-link is-large is-fullwidth\"\n              onClick={this.handleRepo}\n            >\n              Enter\n            </button>\n          </form>\n        </div>\n        <button\n          className=\"modal-close is-large\"\n          aria-label=\"close\"\n          onClick={this.showModal}\n        ></button>\n      </div>\n    );\n  }\n\n  render() {\n    const date = new Date(this.props.since);\n    const dateString = new Date(\n      date.getTime() - date.getTimezoneOffset() * 60000\n    )\n      .toISOString()\n      .split(\"T\")[0];\n\n    const { state, choice } = this.props.listFilter;\n    const titleString = `${titleCase(state)} ${\n      choice === \"all\" ? \"issues/PRs\" : choice\n    } since ${dateString}`;\n    return (\n      <nav className=\"navbar navbar-center panel-heading\" role=\"navigation\">\n        <div className=\"navbar-brand navbar-center \">\n          <span className=\"navbar-item\">\n            <span\n              className=\"img-label-container is-unselectable\"\n              onClick={this.showModal}\n            >\n              <img\n                src={this.state.avatar}\n                alt={`${this.props.user}/${this.props.repo}`}\n                width=\"28px\"\n                height=\"28px\"\n              />\n              <p>{this.props.repo}</p>\n            </span>\n          </span>\n          <span className=\"navbar-item \">\n            <p className=\"is-unselectable is-mobile  title-string\">\n              {titleString}\n            </p>\n          </span>\n          <span\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </span>\n        </div>\n        {this.renderModal()}\n\n        {\n          <div className=\"navbar-center\">\n            <div id=\"navbarBasicExample\" className=\"navbar-menu navbar-center\">\n              <span className=\"navbar-item \">\n                <NavbarButtonGroup\n                  buttonArray={[\"issues\", \"pull requests\", \"all\"]}\n                  filterType=\"choice\"\n                  clickFunction={this.handleFilter}\n                  listFilter={this.props.listFilter}\n                />\n              </span>\n              <span className=\"navbar-item\">\n                <NavbarButtonGroup\n                  buttonArray={[\"open\", \"closed\", \"all\"]}\n                  filterType=\"state\"\n                  clickFunction={this.handleFilter}\n                  listFilter={this.props.listFilter}\n                />\n              </span>\n            </div>\n          </div>\n        }\n      </nav>\n    );\n  }\n}\nexport default FixedHeaderComponent;\n","import React from \"react\";\n\n// Function to pad zeros on to inverted color return\nconst padZero = (str, len) => {\n  len = len || 2;\n  var zeros = new Array(len).join(\"0\");\n  return (zeros + str).slice(-len);\n};\n\n// Function to invert the color of the label text to make it more readable\nconst invertColor = (hex, bw) => {\n  if (hex.indexOf(\"#\") === 0) {\n    hex = hex.slice(1);\n  }\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  if (hex.length !== 6) {\n    throw new Error(\"Invalid HEX color.\");\n  }\n  var r = parseInt(hex.slice(0, 2), 16),\n    g = parseInt(hex.slice(2, 4), 16),\n    b = parseInt(hex.slice(4, 6), 16);\n  if (bw) {\n    return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? \"#000000\" : \"#FFFFFF\";\n  }\n  r = (255 - r).toString(16);\n  g = (255 - g).toString(16);\n  b = (255 - b).toString(16);\n  return \"#\" + padZero(r) + padZero(g) + padZero(b);\n};\n\n// renders the labels and their text from the labels property of the API response object\nconst Labels = ({ labels }) => {\n  let labelMap = labels.map((label, index) => {\n    return (\n      <span\n        key={index}\n        style={{\n          backgroundColor: \"#\" + label.color,\n          color: invertColor(\"#\" + label.color, true),\n        }}\n        className={\"tag \" + (labels.length === 0 ? \"is-hidden\" : \"\")}\n      >\n        {label.name}\n      </span>\n    );\n  });\n  return <React.Fragment>{labelMap}</React.Fragment>;\n};\n\nexport default Labels;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapSigns } from \"@fortawesome/free-solid-svg-icons\";\n\n// renders the milestones and an acompanying icon with an option to extend the classlist\nconst Milestones = ({ milestone, _addclass }) => {\n  let jsx = (\n    <span\n      className={\n        !milestone\n          ? \"is-hidden\"\n          : \"milestone\" + \" \" + (_addclass ? [..._addclass] : \"\")\n      }\n    >\n      <FontAwesomeIcon icon={faMapSigns} className=\"fa-lg\" />{\" \"}\n      {!milestone ? \"\" : milestone.title}\n    </span>\n  );\n  return jsx;\n};\n\nexport default Milestones;\n","import React from \"react\";\n\nimport { Swipeable } from \"react-swipeable\";\n\n// small swipable wrapper around the pagination component for a little mobile sugar\n\nclass SwipeComponent extends React.Component {\n  render() {\n    return (\n      <Swipeable\n        onSwipedLeft={this.props.onSwipingLeft}\n        onSwipedRight={this.props.onSwipingRight}\n      >\n        {this.props.children}\n      </Swipeable>\n    );\n  }\n}\n\n// Pagination component to navigate API reponse in full\nclass PaginationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendPageNumber = this.sendPageNumber.bind(this);\n    this.swipingLeft = this.swipingLeft.bind(this);\n    this.swipingRight = this.swipingRight.bind(this);\n  }\n\n  sendPageNumber(e) {\n    this.props.onPageChange(`${e.currentTarget.dataset.url}`);\n  }\n\n  swipingLeft(e, absX) {\n    const lastpage = this.props.pages.last\n      ? this.props.pages.last.split(\"=\").pop()\n      : this.props.pages.prev\n      ? +this.props.pages.prev.split(\"=\").pop() + 1\n      : 1;\n    if (this.props.currentPageNumber < lastpage) {\n      this.props.onPageChange(`&page=${this.props.currentPageNumber + 1}`);\n    }\n  }\n  swipingRight(e, absX) {\n    if (this.props.currentPageNumber > 1) {\n      this.props.onPageChange(`&page=${this.props.currentPageNumber - 1}`);\n    }\n  }\n\n  render() {\n    const pages = this.props.pages;\n    const currentPageNumber = this.props.currentPageNumber;\n    // determines the last page(total pages) from the parsed Link headers - if there is only one page, it returns 1\n    const lastpage = pages.last\n      ? pages.last.split(\"=\").pop()\n      : pages.prev\n      ? +pages.prev.split(\"=\").pop() + 1\n      : 1;\n    // make an array with the page number strings (i.e &page=1) to map\n    const pageButtons = Array.apply(null, { length: lastpage })\n      .map(Number.call, Number)\n      .map((x) => `&page=${x + 1}`);\n\n    return (\n      <SwipeComponent\n        onSwipingLeft={this.swipingLeft}\n        onSwipingRight={this.swipingRight}\n      >\n        <nav\n          className=\"pagination is-medium is-centered\"\n          role=\"navigation\"\n          aria-label=\"pagination\"\n        >\n          <button\n            className={\n              \"pagination-previous \" +\n              (currentPageNumber > 1 ? \"\" : \" is-invisible\")\n            }\n            data-url={`&page=${currentPageNumber - 1}`}\n            onClick={this.sendPageNumber}\n          >\n            ◄◄\n          </button>\n          <button className=\"pagination-link is-hidden-tablet\">\n            {`${currentPageNumber}/${lastpage}`}\n          </button>\n          <button\n            className={\n              \"pagination-next \" +\n              (currentPageNumber < lastpage ? \"\" : \" is-invisible\")\n            }\n            data-url={`&page=${currentPageNumber + 1}`}\n            onClick={this.sendPageNumber}\n          >\n            ►►\n          </button>\n          <ul className=\"pagination-list\">\n            {pageButtons.map((page, i) => {\n              const p = +page.split(\"=\").pop();\n              return (\n                <li key={i} className=\"is-hidden-mobile\">\n                  <button\n                    data-url={page}\n                    onClick={this.sendPageNumber}\n                    className={\n                      \"pagination-link \" +\n                      (p === currentPageNumber ? \" is-current\" : p)\n                    }\n                    aria-label={\"Goto page \" + p}\n                  >\n                    {p}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </SwipeComponent>\n    );\n  }\n}\nexport default PaginationComponent;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faExclamationCircle,\n  faCodeBranch,\n  faCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// exclamation circle with added check option for issue icon\nconst IssueIconStack = ({ state }) => {\n  return (\n    <span className=\"fa-layers fa-fw fa-2x\">\n      <FontAwesomeIcon icon={faCircle} color={state} />\n      <FontAwesomeIcon\n        className=\"fa-inverse\"\n        icon={faExclamationCircle}\n        color={state}\n        transform=\"shrink-2\"\n      />\n      {state === \"red\" && (\n        <FontAwesomeIcon\n          icon={faCheck}\n          color={state}\n          transform=\"shrink-10 right-5 up-4\"\n        />\n      )}\n    </span>\n  );\n};\n\n// code branch and check icon stack for PR icon\nconst PrIconStack = ({ state }) => {\n  return (\n    <span className=\"fa-layers fa-fw fa-2x\">\n      <FontAwesomeIcon icon={faCodeBranch} color={state} transform=\"shrink-4\" />\n      {state === \"red\" ? (\n        <FontAwesomeIcon\n          icon={faCheck}\n          color={state}\n          transform=\"shrink-8 right-4 down-4\"\n        />\n      ) : (\n        \"\"\n      )}\n    </span>\n  );\n};\n\n// renders the appropriate stacked icon for each issue/pr and applies color accordnig to open/closed state\nconst StackedIcons = ({ type, state }) => {\n  const iconColor = state === \"closed\" ? \"red\" : \"green\";\n  let jsx = type ? (\n    <IssueIconStack state={iconColor} type={type} />\n  ) : (\n    <PrIconStack state={iconColor} type={type} />\n  );\n  return jsx;\n};\n\nexport default StackedIcons;\n","import React from \"react\";\n\n// Function to get text string corresponding to given date - i.e. '7 days ago'\nconst getTimeAgoString = (timestamp) => {\n  const SECOND = 1000;\n  const MINUTE = SECOND * 60;\n  const HOUR = MINUTE * 60;\n  const DAY = HOUR * 24;\n  const MONTH = DAY * 30;\n  const YEAR = DAY * 365;\n\n  const elapsed = Date.now() - timestamp,\n    getElapsedString = (value, unit) => {\n      const round = Math.round(elapsed / value);\n      return `${round} ${unit}${round > 1 ? \"s\" : \"\"} ago`;\n    };\n  if (elapsed < MINUTE) {\n    return getElapsedString(SECOND, \"second\");\n  }\n  if (elapsed < HOUR) {\n    return getElapsedString(MINUTE, \"minute\");\n  }\n  if (elapsed < DAY) {\n    return getElapsedString(HOUR, \"hour\");\n  }\n  if (elapsed < MONTH) {\n    return getElapsedString(DAY, \"day\");\n  }\n  if (elapsed < YEAR) {\n    return getElapsedString(MONTH, \"month\");\n  }\n  return getElapsedString(YEAR, \"year\");\n};\n\n// renders the '#999 7 days ago by user -- Assigned to user1 user2' string for each issue\nconst TimeAgoComponent = ({ data }) => {\n  const createdAt = getTimeAgoString(new Date(data.created_at));\n  const updatedAt = getTimeAgoString(new Date(data.updated_at));\n  const user = data.user.login;\n  const whichTime =\n    createdAt !== updatedAt\n      ? `#${data.number} created ${createdAt} (updated ${updatedAt})`\n      : `#${data.number} created ${createdAt}`;\n  let timeAgoString = `${whichTime} by ${user}`;\n  const assigneesString = `${\n    data.assignees.length > 0\n      ? ` ---  Assigned to: ${data.assignees.map((x) => {\n          return \" \" + x.login;\n        })}`\n      : \"\"\n  }`;\n  return <React.Fragment>{timeAgoString + assigneesString}</React.Fragment>;\n};\n\nexport default TimeAgoComponent;\n","import React from \"react\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as appHelpers from \"../appHelpers\";\nimport Comments from \"./Comments\";\nimport FixedHeaderComponent from \"./FixedHeaderComponent\";\nimport Labels from \"./Labels\";\nimport Milestones from \"./Milestones\";\nimport PaginationComponent from \"./PaginationComponent\";\nimport StackedIcons from \"./StackedIcons\";\nimport TimeAgoComponent from \"./TimeAgoComponent\";\n\nimport \"bulma/css/bulma.css\";\nimport \"../GithubIssues.css\";\n\nfunction incrementPage(page) {\n  return (previousState) => {\n    return {\n      ...previousState,\n      page: page,\n      currentPageNumber: +page.split(\"=\").pop(),\n      loading: true,\n    };\n  };\n}\n\nfunction changeFilter(filterObj) {\n  return (previousState) => {\n    let stateTest =\n      previousState.listFilter.state !== filterObj.state ? true : false;\n    return { ...previousState, listFilter: filterObj, loading: stateTest };\n  };\n}\n\nfunction changeRepo(user, repo) {\n  return (previousState) => {\n    return { ...previousState, user: user, repo: repo, loading: true };\n  };\n}\n\n/**\n *\n *\n * @class GithubIssues\n * @extends {React.Component}\n */\nclass GithubIssues extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      repo: \"\",\n      listFilter: { state: \"open\", choice: \"issues\" },\n      since: new Date(Date.now() - 7000 * 24 * 60 * 60 * 1000).toISOString(),\n      per_page: 40,\n      sort: \"created\",\n      page: \"\",\n      currentPageNumber: 1,\n      pages: {},\n      issues: [],\n      loading: true,\n      error: null,\n      showBody: {},\n    };\n\n    // fix the this value\n    this.getIssues = this.getIssues.bind(this);\n    this.handleRepoChange = this.handleRepoChange.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  // set state with props here, because we might change the user/repo later\n  componentWillMount() {\n    this.setState({\n      user: this.props.user,\n      repo: this.props.repo,\n      // ...\n    });\n  }\n  componentDidMount() {\n    /**\n     * From Bulma Docs to activate responsive menu burger\n     */\n    const $navbarBurgers = Array.prototype.slice.call(\n      document.querySelectorAll(\".navbar-burger\"),\n      0\n    );\n    if ($navbarBurgers.length > 0) {\n      $navbarBurgers.forEach((el) => {\n        el.addEventListener(\"click\", () => {\n          const target = el.dataset.target;\n          const $target = document.getElementById(target);\n          el.classList.toggle(\"is-active\");\n          $target.classList.toggle(\"is-active\");\n        });\n      });\n    }\n\n    // Get the issues and populate the panel\n    this.getIssues();\n  }\n\n  shouldComponentUpdate(previousState, nextState) {\n    if (previousState.page !== nextState.page) {\n      return true;\n    }\n    if (previousState.listFilter !== nextState.listFilter) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Fetch issues for repository\n   */\n  getIssues() {\n    // Use auth token with Github API in order to have a higher rate limit for this example - not recommended for client-side use in production\n    const headers = {\n      headers: {\n        Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n        Accept:\n          \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n      },\n    };\n\n    const baseUrl = \"https://api.github.com/repos\";\n\n    // 7 days ago from today in ISO - to be used for GH API parameter\n    // included as a state variable because I will add a datepicker in the future for custom time frame\n    const since = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString();\n\n    // GET parameters to send to GH Issues API\n    // `this.state.listFilter.state` - this is ~confusing because GH refers to\n    // 'open, closed' as 'state' of an issue/PR\n    // I am calling open/close/all 'state' and issue/pr/all 'choice'\n    const params = appHelpers.encodeQueryString({\n      state: this.state.listFilter.state,\n      since: since,\n      per_page: 40,\n      sort: \"created\",\n    });\n\n    // Need an empty string to store Link headers from GET response since we need to reference it within promise chain - used for pagination\n    let linkHeaders = \"\";\n\n    // Build the URL from props/state(for the page) - [note: when state.page changes, we update]\n    let userRepoIssues = `${this.state.user}/${this.state.repo}/issues`;\n\n    let fullUrl = `${baseUrl}/${userRepoIssues}${params}${this.state.page}`;\n\n    fetch(fullUrl, headers)\n      .then((response) => {\n        // If we have Link headers, parse them in to an object to store via appHelpers.parseLinkHeaders\n        if (response.headers.get(\"Link\")) {\n          linkHeaders = appHelpers.parseLinkHeader(\n            response.headers.get(\"Link\")\n          );\n        }\n        if (response.ok) return response.json();\n        throw new Error(\"Request failed.\");\n      })\n      .then((data) => {\n        // set our state with the response\n        this.setState({\n          pages: linkHeaders,\n          issues: data,\n          loading: false,\n          error: null,\n          showBody: {},\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n          error: error,\n        });\n      });\n  }\n\n  // Render a loading bar during HTTP Request\n  renderLoading() {\n    return (\n      <progress className=\"progress is-large is-dark\" max=\"100\"></progress>\n    );\n  }\n\n  // Render an error message\n  renderError() {\n    return <div>Uh oh: {this.state.error.message}</div>;\n  }\n\n  // expects a URL parameter like the end of pagination url - i.e '&page=2'\n  handlePageChange(page) {\n    this.setState(incrementPage(page), () => {\n      this.getIssues();\n    });\n  }\n\n  // Handles interaction with header filter buttons\n  handleFilterChange(toFilter) {\n    let newObj = { ...this.state.listFilter, ...toFilter };\n    this.setState(changeFilter(newObj), () => {\n      Object.keys(toFilter)[0] === \"state\" && this.getIssues();\n    });\n  }\n  // Handles interaction with the repository switcher in the header element\n  handleRepoChange(user, repo) {\n    this.setState(changeRepo(user, repo), () => {\n      this.getIssues();\n    });\n  }\n\n  // Renders the panel blocks that contain the issue information\n  renderIssues() {\n    if (this.state.error) {\n      return this.renderError();\n    }\n\n    // set state to show or hide issue/pr body for a particular panel-block\n    const isVisible = (id) => {\n      return this.state.showBody[\"_\" + id]\n        ? \" container bodyContainer\"\n        : \" is-hidden\";\n    };\n\n    // Accordian behavior on panel blocks that render the issue markdown as html with showdown.js\n    const handleClick = (e) => {\n      e.preventDefault();\n      let obj = {};\n      const id = e.currentTarget.dataset.id;\n      obj[\"_\" + id] = this.state.showBody[\"_\" + id] === true ? false : true;\n      this.setState({ showBody: obj });\n      // if the showBody state matches the ID of a panel, get the body contents from the cached response data and render it with Showdown\n      if (obj[\"_\" + id]) {\n        this.state.issues.map(function (issues) {\n          if (issues.id === +id) {\n            return (document.querySelector(\n              `._${id}`\n            ).innerHTML = appHelpers.converter.makeHtml(issues.body));\n          }\n          return true;\n        });\n      }\n    };\n    /**\n     * expects true or false based on the presence of 'pull_request' property from issues repsonse object\n     * shows or hides issues/pr\n     */\n    const hideMe = (issueOrPr) => {\n      let choiceType = issueOrPr ? \"issues\" : \"pull requests\";\n      return this.state.listFilter.choice !== (choiceType || \"all\")\n        ? \" \"\n        : \" is-hidden\";\n    };\n\n    return (\n      <React.Fragment>\n        {this.state.issues.map(function (data, index) {\n          return (\n            <a\n              href=\"#\"\n              key={index}\n              className={\"panel-block\" + hideMe(data.pull_request)}\n            >\n              <span\n                data-id={data.id}\n                className=\"panel-ovr\"\n                onClick={handleClick}\n              >\n                <span className=\"columns is-mobile is-multiline is-vcentered is-2\">\n                  <span className=\" column is-1\">\n                    <span className=\"panel-icon icon is-small\">\n                      <StackedIcons\n                        type={!data.pull_request}\n                        state={data.state}\n                      />\n                    </span>\n                  </span>\n                  <span className=\"column is-11 info-container\">\n                    <span className=\"_title\">{data.title}</span>\n                    <br className=\"is-hidden-tablet\" />\n                    <span className=\"time is-hidden-tablet\">\n                      <TimeAgoComponent data={data} />\n                      <Milestones\n                        milestone={data.milestone}\n                        _addclass={[\"is-hidden-mobile\"]}\n                      />\n                    </span>\n                    <br className=\"is-hidden-tablet\" />\n                    <Labels labels={data.labels} />\n                    <br className=\"is-hidden-mobile\" />\n                    <span className=\"time is-hidden-mobile\">\n                      <TimeAgoComponent data={data} />\n                      <Milestones milestone={data.milestone} />\n                      <Comments data={data} />\n                    </span>\n                  </span>\n                  <span className=\"column show-body has-text-right is-pulled-right\">\n                    <FontAwesomeIcon icon={faEye} />\n                  </span>\n                </span>\n              </span>\n              <span className={\"_\" + data.id + isVisible(data.id)}></span>\n            </a>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n  render() {\n    return (\n      <div\n        className=\"container\"\n        style={{\n          position: \"fixed\",\n          margin: \"90px\",\n          width: \"100%\",\n          background: \"gainsboro repeat scroll 0% 0%\",\n          overflow: \"hidden\",\n        }}\n      >\n        <nav className=\"panel\" style={{ overflow: \"auto\" }}>\n          <FixedHeaderComponent\n            listFilter={this.state.listFilter}\n            onFilterChange={this.handleFilterChange}\n            onRepoChange={this.handleRepoChange}\n            user={this.state.user}\n            repo={this.state.repo}\n            since={this.state.since}\n          />\n          {this.state.loading ? this.renderLoading() : this.renderIssues()}\n          <nav className=\"navbar  is-fixed-bottom is-transparent\">\n            <div\n              className=\"navbar-start\"\n              style={{ flexGrow: 1, justifyContent: \"center\" }}\n            >\n              <div className=\"navbar-item\">\n                <PaginationComponent\n                  pages={this.state.pages}\n                  currentPageNumber={this.state.currentPageNumber}\n                  onPageChange={this.handlePageChange}\n                />\n              </div>\n            </div>\n          </nav>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default GithubIssues;\n","import React from \"react\";\nimport GithubIssues from \"./GithubIssues\";\n\nconst Issues = () => {\n  return <GithubIssues user=\"AntennaPod\" repo=\"AntennaPod\" />;\n};\n\nexport default Issues;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./Components/Home\";\nimport Design from \"./Components/Design\";\nimport Nav from \"./Nav.js\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport ConnectualEventivity from \"./Components/ConnectualEventivity\";\nimport Usability from \"./Components/Usability\";\nimport Issues from \"./Components/Issues\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Nav></Nav>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/ec\" component={ConnectualEventivity} />\n\n          <Route path=\"/usability\" component={Usability} />\n\n          <Route path=\"/design\" component={Design} />\n\n          <Route path=\"/issues\" component={Issues} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}