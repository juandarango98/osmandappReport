{"version":3,"sources":["logo.svg","Nav.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Home","id","style","backgroundImage","href","withRouter","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,kC,4HCsD5BC,EAlDH,WACV,OACE,yBAAKC,UAAU,+CACb,kBAAC,IAAD,CAAMC,GAAG,uBAAuBD,UAAU,gBAA1C,iBAGA,4BACEA,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMP,UAAU,yBAGlB,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMC,GAAG,GAAGD,UAAU,YACpB,wBAAIA,UAAU,cAAd,QACA,0BAAMA,UAAU,WAAhB,cAEF,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YACzB,wBAAIA,UAAU,cAAd,gBACA,0BAAMA,UAAU,WAAhB,cAEF,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YACzB,wBAAIA,UAAU,cAAd,yBACA,0BAAMA,UAAU,WAAhB,cAEF,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YACzB,wBAAIA,UAAU,cAAd,eACA,0BAAMA,UAAU,WAAhB,cAEF,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YACzB,wBAAIA,UAAU,cAAd,UACA,0BAAMA,UAAU,WAAhB,cAEF,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YACzB,wBAAIA,UAAU,cAAd,aACA,0BAAMA,UAAU,WAAhB,kBCyDGQ,G,MAnGF,WACX,OACE,yBAAKR,UAAU,QACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,wBACb,yBAAKS,GAAG,WAAWT,UAAU,0BAC3B,yBACEA,UAAU,sCACVU,MAAO,CACLC,gBAAgB,oDAGlB,yBAAKX,UAAU,sBACf,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,mBAAb,uCAGA,wBAAIA,UAAU,oBACZ,0BAAMA,UAAU,WAAhB,UADF,QAGA,uBAAGA,UAAU,8BACX,uBAAGY,KAAK,gBACN,0BAAMZ,UAAU,WAAhB,8BAatB,6BAASA,UAAU,8BAA8BS,GAAG,eAClD,yBAAKT,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,WAAd,mBAKR,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,uBAAGA,UAAU,aAAb,ycAWF,yBAAKA,UAAU,iBACb,uBAAGY,KAAK,UAAUZ,UAAU,oBAA5B,aAEE,0BAAMA,UAAU,iCAS9B,gCACE,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,0BAAb,OAEE,0BAAMA,UAAU,WACb,IADH,uCAGQ,IALV,Y,OCtECa,mBAZf,WACE,OACE,yBAAKb,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,KAAK,IAAIC,OAAK,EAACC,UAAWR,IAEjC,kBAAC,IAAD,CAAOM,KAAK,QAAQE,UAAWR,SCCnBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.82f60ea0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link to=\"osmandappReport/home\" className=\"navbar-brand\">\n        Osmand Report\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\">\n        <ul className=\"navbar-nav\">\n          <Link to=\"\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Home</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/home\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Architecture</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/home\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Eventual connectivity</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/home\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Performance</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/home\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Design</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n          <Link to=\"/home\" className=\"nav-link\">\n            <li className=\"prueba-nav\">Usability</li>\n            <span className=\"sr-only\">(current)</span>\n          </Link>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport Nav from \"../Nav.js\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"Home\">\n      <Nav></Nav>\n\n      <div className=\"intro intro-carousel\">\n        <div id=\"carousel\" className=\"owl-carousel owl-theme\">\n          <div\n            className=\"carousel-item-a intro-item bg-image\"\n            style={{\n              backgroundImage: `url(https://osmand.net/images/header_image.jpg)`,\n            }}\n          >\n            <div className=\"overlay overlay-a\"></div>\n            <div className=\"intro-content display-table\">\n              <div className=\"table-cell\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-8\">\n                      <div className=\"intro-body\">\n                        <p className=\"intro-title-top\">\n                          Juan Diego Arango & Gregorio Ospina\n                        </p>\n                        <h1 className=\"intro-title mb-4\">\n                          <span className=\"color-b\">Osmand</span> App\n                        </h1>\n                        <p className=\"intro-subtitle intro-price\">\n                          <a href=\"#descripcion\">\n                            <span className=\"price-a\">What is Osmand?</span>\n                          </a>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <section className=\"section-services section-t8\" id=\"descripcion\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"title-wrap d-flex justify-content-between\">\n                <div className=\"title-box\">\n                  <h2 className=\"title-a\">Description</h2>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card-box-c foo\">\n                <div className=\"card-body-c\">\n                  <p className=\"content-d\">\n                    OsmAnd is an offline navigation application with access to\n                    the free, worldwide, and high-quality offline maps. Enjoy\n                    voice and visual offline navigation, viewing points of\n                    interest, creating and managing GPX tracks, using contour\n                    lines visualization and altitude info (through plugin), a\n                    choice between car navigation, cycle navigation or\n                    directions in the pedestrian mode, OSM editing and much\n                    more. Just download your free maps and get the following:\n                  </p>\n                </div>\n                <div className=\"card-footer-c\">\n                  <a href=\"/signup\" className=\"link-c link-icon\">\n                    Learn more\n                    <span className=\"ion-ios-arrow-forward\"></span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <footer>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"copyright-footer\">\n              <p className=\"copyright color-text-a\">\n                &copy;\n                <span className=\"color-a\">\n                  {\" \"}\n                  Gregorio Ospina - Juan Diego Arango\n                </span>{\" \"}\n                .\n              </p>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./Components/Home\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n\n        <Route path=\"/home\" component={Home} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}